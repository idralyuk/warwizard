template: Hello, %s!

defaultName: Stranger

# Database settings.
database:

  # the name of your JDBC driver
  driverClass: org.h2.Driver

  # the username
  user: sa

  # the password
  password: sa

  # the JDBC URL
  url: jdbc:h2:target/example

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: DEBUG

  # Settings for logging to stdout.
  console:

    # If true, write log statements to stdout.
    enabled: true

    # Do not display log statements below this threshold to stdout.
    threshold: ALL

  # Settings for logging to a file.
  file:

    # If true, write log statements to a file.
    enabled: true

    # Do not write log statements below this threshold to the file.
    threshold: ALL

    # The file to which statements will be logged.
    currentLogFilename: ./logs/example.log

    #  When the log file rolls over, the file will be archived to example-2012-03-15.log.gz,
    # example.log will be truncated, and new statements written to it.
    archivedLogFilenamePattern: ./logs/example-%d.log.gz

    # The maximum number of log files to archive.
    archivedFileCount: 5

  # Settings for logging to syslog.
  syslog:

    # If true, write log statements to syslog.
    enabled: false

    # The hostname of the syslog server to which statements will be sent.
    # N.B.: If this is the local host, the local syslog instance will need to be configured to
    # listen on an inet socket, not just a Unix socket.
    host: localhost

    # The syslog facility to which statements will be sent.
    facility: local0
